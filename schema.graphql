type Owner @entity {
  id: ID!
  planets: [Planet!]! @derivedFrom(field: "owner")
  fleets: [Fleet!]! @derivedFrom(field: "owner")
  events: [OwnerEvent!]! @derivedFrom(field: "owner")
  totalStaked: BigInt!
  currentStake: BigInt!
  totalCollected: BigInt!
  playTokenBalance: BigInt!
  playTokenToWithdraw: BigInt!
}

type Planet @entity {
  id: ID!
  owner: Owner!
  numSpaceships: BigInt!
  active: Boolean!
  lastUpdated: BigInt!
  firstAcquired: BigInt!
  lastAcquired: BigInt!
  zone: String!
  exitTime: BigInt!
  departedFleets: [Fleet!]! @derivedFrom(field: "from")
  events: [PlanetEvent!]! @derivedFrom(field: "planet")

  # TODO remove ------------
  x: BigInt!
  y: BigInt!

  zoneX: BigInt!
  zoneY: BigInt!
  # ----------------------
}

type Fleet @entity {
  id: ID!
  owner: Owner!
  launchTime: BigInt!
  from: Planet!
  quantity: BigInt!
  events: [FleetEvent!]! @derivedFrom(field: "fleet")
}

interface OwnerEvent {
  id: ID! # <blockNumber>_logID
  blockNumber: Int!
  timestamp: BigInt!
  transactionID: Bytes!
  owner: Owner!
}

interface PlanetEvent {
  id: ID! # <blockNumber>_logID
  blockNumber: Int!
  timestamp: BigInt!
  transactionID: Bytes!
  owner: Owner!
  planet: Planet!
}

interface FleetEvent {
  id: ID! # <blockNumber>_logID
  blockNumber: Int!
  timestamp: BigInt!
  transactionID: Bytes!
  owner: Owner!
  fleet: Fleet!
}

type PlanetStakeEvent implements OwnerEvent & PlanetEvent @entity {
  id: ID! # <blockNumber>_logID
  blockNumber: Int!
  timestamp: BigInt!
  transactionID: Bytes!
  owner: Owner!
  planet: Planet!
  numSpaceships: BigInt!
}
type PlanetExitEvent implements OwnerEvent & PlanetEvent @entity {
  id: ID! # <blockNumber>_logID
  blockNumber: Int!
  timestamp: BigInt!
  transactionID: Bytes!
  owner: Owner!
  planet: Planet!
  exitTime: BigInt!
}

type FleetArrivedEvent implements OwnerEvent & PlanetEvent & FleetEvent @entity {
  id: ID! # <blockNumber>_logID
  blockNumber: Int!
  timestamp: BigInt!
  transactionID: Bytes!
  owner: Owner!
  planet: Planet!
  fleet: Fleet!
  destinationOwner: Owner!
  fleetLoss: BigInt!
  planetLoss: BigInt!
  inFlightFleetLoss: BigInt!
  inFlightPlanetLoss: BigInt!
  won: Boolean!
  newNumspaceships: BigInt!
}
type FleetSentEvent implements OwnerEvent & PlanetEvent & FleetEvent @entity {
  id: ID! # <blockNumber>_logID
  blockNumber: Int!
  timestamp: BigInt!
  transactionID: Bytes!
  owner: Owner!
  planet: Planet!
  fleet: Fleet!
  quantity: BigInt!
  newNumSpaceships: BigInt!
}

type StakeToWithdrawEvent implements OwnerEvent @entity {
  id: ID! # <blockNumber>_logID
  blockNumber: Int!
  timestamp: BigInt!
  transactionID: Bytes!
  owner: Owner!
  newStake: BigInt!
}
